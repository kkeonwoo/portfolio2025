@mixin flex($js: center, $ai: center) {
    display: flex;
    align-items: _get-flex-value($ai);
    justify-content: _get-flex-value($js);
}

@mixin inline-flex($js: center, $ai: center) {
    display: inline-flex;
    align-items: _get-flex-value($ai);
    justify-content: _get-flex-value($js);
}

@mixin column-flex($js: center, $ai: center) {
    display: flex;
    flex-direction: column;
    align-items: _get-flex-value($ai);
    justify-content: _get-flex-value($js);
}

@mixin absCenter($horizontal: true, $vertical: true) {
    position: absolute;

    @if ($horizontal and $vertical) {
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
    }

    @else if($horizontal) {
        left: 50%;
        transform: translateX(-50%);
    }

    @else if($vertical) {
        top: 50%;
        transform: translateY(-50%);
    }
}

@mixin ellipsis {
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
}

@mixin multiEllipsis($line: 2, $lineHeight: 1.5) {
    display: -webkit-box;
    height: ($lineHeight * 1em * $line);
    overflow: hidden;
    line-height: $lineHeight;
    -webkit-line-clamp: $line;
    -webkit-box-orient: vertical;
}

@mixin pseudo($display: block, $pos: absolute, $content: "") {
    display: $display;
    position: $pos;
    content: $content;
}

@mixin bg($url, $pos: center center, $size: 100% auto) {
    background: url("../images/#{$url}") no-repeat $pos / $size;
}

@mixin bge($pos: center center, $size: 100% auto) {
    background-repeat: no-repeat;
    background-position: $pos;
    background-size: $size;
}

@mixin font-face($name,
    $file-path,
    $weight: 400,
    $style: normal,
    $woff2: true,
    $woff: true,
    $ttf: false,
    $otf: false,
    $eot: false) {
    @font-face {
        font-family: $name;
        font-weight: $weight;
        font-style: $style;

        src: #{"url('#{$file-path}.woff2') format(' woff2')"} if $woff2,
             #{"url('#{$file-path}.woff') format(' woff')"} if $woff,
             #{"url('#{$file-path}.ttf') format(' truetype')"} if $ttf,
             #{"url('#{$file-path}.otf') format(' opentype')"} if $otf,
             #{"url('#{$file-path}.eot') format(' embedded-opentype')"} if $eot;
    }
}

@mixin mobile {
    @media (max-width: #{$breakpoint-mobile - 1px}) {
        @content;
    }
}
@mixin tablet {
    @media (max-width: #{$breakpoint-tablet - 1px}) {
        @content;
    }
}
@mixin desktop {
    @media (min-width: #{$breakpoint-tablet}) {
        @content;
    }
}